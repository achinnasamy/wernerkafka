

---------------------------------------------------------------------------------------------------------------------------------------------------------


                                                            KAFKA COMMANDS


---------------------------------------------------------------------------------------------------------------------------------------------------------


[1] 	echo $PATH

[2] 	export PATH=$PATH:/path/to/jdk/bin

[3] 	ps -ef | grep kafka

[4] 	kill -9 <process_id>

[5]	    chmod 777 dir

[6] 	./zookeeper-server-start.sh ../config/zookeeper.properties 

[7] 	./kafka-server-start.sh  ../config/server.properties

[8] 	Creating topic

        ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic CASSANDRA-TOPIC
     	./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 60 --topic UNISYS-TOPIC
     	./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 2 --partitions 30 --topic MONGODB-TOPIC
        ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 30 --topic ETMS-TOPIC

[9]  	./kafka-console-producer.sh --broker-list localhost:9092 --topic HDFS-TOPIC
        [OR]
        ./kafka-console-producer.sh --broker-list localhost:9092 --topic HDFS-TOPIC --property parse.key=true --property key.separator=:


[10] 	./kafka-console-consumer.sh --bootstrap-server  localhost:9092 --topic MAPPED_HDFS_DATA_TOPIC --from-beginning
        [OR]
        ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic MAPPED_HDFS_DATA_TOPIC --property print.key=true --property key.separator="  ---   " --from-beginning



--------------------------------- ADMINISTRATION ---------------------------------
[11] 	Data of kafka are by default inside /tmp/kafka-logs
        server.properties => /tmp/kafka-logs

[12]  List the topics
        ./kafka-topics.sh --list --zookeeper localhost:2181

[13]  Describe the topic
        ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic UNISYS-TOPIC
        Topic:KANDY-TOPIC	PartitionCount:100	ReplicationFactor:1	Configs:
        	Topic: KANDY-TOPIC	Partition: 0	Leader: 0	Replicas: 0	Isr: 0
        	Topic: KANDY-TOPIC	Partition: 1	Leader: 0	Replicas: 0	Isr: 0
        	Topic: KANDY-TOPIC	Partition: 2	Leader: 0	Replicas: 0	Isr: 0

[14]    Deleting a topic
        ./kafka-topics.sh --zookeeper localhost:2181 --delete --topic CHOLA
        But this will have impact only when delete.topic.enable is set to true

[15]    Altering a topic
        Altering the partitions count for a topic
        ./kafka-topics.sh --zookeeper localhost:2181 --alter --topic ZETA-ENGINE-TOPIC --partitions 20

        You cannot decrease the number of partitions

        ./kafka-topics.sh --zookeeper localhost:2181 --alter --topic ETMS-TOPIC --partitions 5

        WARNING: If partitions are increased for a topic that has a key, the partition logic or ordering of the messages will be affected
        Error while executing topic command : The number of partitions for a topic can only be increased. Topic ETMS-TOPIC currently has 31 partitions, 5 would not be an increase.
        [2018-04-27 20:16:37,610] ERROR org.apache.kafka.common.errors.InvalidPartitionsException: The number of partitions for a topic can only be increased. Topic ETMS-TOPIC currently has 31 partitions, 5 would not be an increase.


[16]    List all the consumer groups
        Show all the consumer groups
        ./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list

[17]    Reading a segment file
        ./kafka-run-class.sh kafka.tools.DumpLogSegments --deep-iteration --print-data-log --files /tmp/dharshekth-kafka/MESH_TOPIC-1/00000000000000000000.log
        ./kafka-run-class.sh kafka.tools.DumpLogSegments --deep-iteration --print-data-log --files /tmp/kafka-logs/KANDY-TOPIC-23/00000000000000000000.timeindex
        ./kafka-run-class.sh kafka.tools.DumpLogSegments --deep-iteration --print-data-log --files /tmp/kafka-logs/KANDY-TOPIC-23/00000000000000000000.index

[18]    Describe about the consumer
        ./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group AWS-CONSUMER4 --describe

[19]	kafka-reassign-partitions.sh --zookeeper localhost:2181 --topics-to-move-json-file topics-to-move.json --broker-list "1" --generate

[20]    echo "exclude.internal.topics=false" > consumer.config
        /kafka-console-consumer.sh --consumer.config consumer.config --formatter "kafka.coordinator.group.GroupMetadataManager\$OffsetsMessageFormatter" --bootstrap-server localhost:9092 --topic __consumer_offsets


--------------------------------- ADMINISTRATION ---------------------------------

[21]
	---Servers---
	listeners=PLAINTEXT://host.name:port,SSL://host.name:port

	ssl.keystore.location=/var/private/ssl/kafka.server.keystore.jks
	ssl.keystore.password.generator=test1234
	ssl.key.password=test1234
	ssl.truststore.location=/var/private/ssl/kafka.server.truststore.jks
	ssl.truststore.password.generator=test1234

	security.inter.broker.protocol=SSL

	--- Client ---

	security.protocol=SSL
	ssl.truststore.location=/var/private/ssl/kafka.client.truststore.jks
	ssl.truststore.password=test1234

	ssl.keystore.location=/var/private/ssl/kafka.client.keystore.jks
	ssl.keystore.password=test1234
	ssl.key.password=test1234



[22]
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:* --operation ALL --topic BASHAS
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:* --operation WRITE --topic HULK
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:* --producer --topic HULKER
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --authorizer kafka.security.auth.SimpleAclAuthorizer  --add --allow-principal User:* --producer --topic BASHAS
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --authorizer kafka.security.auth.SimpleAclAuthorizer  --add --allow-principal User:* --consumer --topic BASHAS --group *
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --add --deny-principal User:* --operation ALL --topic DATAS
    ./kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --list --topic FARM-TOPIC

[23] ./bin/kafka-run-class.sh org.apache.kafka.clients.producer.internals.ProducerMetrics > metrics.html





