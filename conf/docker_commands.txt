Docker Commands


[1] $ docker images
Lists all the images

[2] $ docker images -f dangling=true
Shows all the images that are not having a tag name.

[3] Build a docker image from a docker file.
$ docker build --tag="pyspark-docker" docker_images
$ docker build --tag="bigchaindbtag" bigchaindb


[4] $ docker build -f /path_to/docker_file
Build a docker file that is anywhere in the file system.

[5] $ docker rmi <<image_id>>
Remove an image

[6] $ docker --version
Retrieves the version of the docker

[7] $ docker stats
Lists all the running containers

[8] $ docker system prune
Docker provides a single command that will clean up any resources — images, containers, volumes, and networks — that are dangling (not associated with a container)

[9] $ docker system prune -a
To additionally remove any stopped containers and all unused images (not just dangling images), add the -a flag to the command.

[10] $ docker run -it pyspark-docker bash
To login in into the image as a ssh shell. Bash shell into the pyspark-docker image.

[11] $ docker ps - list the running containers


[12] $ docker ps -a 
List all the containers that have been stopped also.


[13] $ docker rm <<container_id>> 
To remove a container


[1]
To remove all containers and images you can run these commands
docker rm $(docker ps -a -q) docker rmi $(docker images -q)



docker kill [container]: Kill a particular container.
docker kill $(docker ps -q): Kill all containers that are currently running.
docker rm [container]: Delete a particular container that is not currently running.
docker rm $(docker ps -a -q): Delete all containers that are not currently running.



[] Creating a docker file - Dockerfile -  Commands



